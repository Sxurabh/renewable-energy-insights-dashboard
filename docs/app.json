[{"name":"app.R","content":"# app/app.R\r\nlibrary(shiny)\r\n\r\n# If running inside the browser via webR, request supported packages\r\nif (requireNamespace(\"webr\", quietly = TRUE)) {\r\n  webr::install(c(\"ggplot2\", \"dplyr\"))\r\n}\r\n\r\nhas_ggplot2 <- requireNamespace(\"ggplot2\", quietly = TRUE)\r\nhas_dplyr   <- requireNamespace(\"dplyr\", quietly = TRUE)\r\n\r\n# READ DATA (column names: country, Year, renewables_share_energy)\r\ndat <- read.csv(\"data/renewables.csv\", stringsAsFactors = FALSE)\r\n\r\ncountries <- sort(unique(dat$country))\r\nyears_rng <- range(dat$Year, na.rm = TRUE)\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Renewable Energy Share Explorer\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"countries\", \"Countries\",\r\n                  choices = countries,\r\n                  selected = c(\"India\", \"United States\"),\r\n                  multiple = TRUE),\r\n      sliderInput(\"years\", \"Year range\",\r\n                  min = years_rng[1],\r\n                  max = years_rng[2],\r\n                  value = years_rng,\r\n                  step = 1),\r\n      checkboxInput(\"smooth\", \"Add linear trend\", TRUE),\r\n      downloadButton(\"dl\", \"Download filtered CSV\")\r\n    ),\r\n    mainPanel(\r\n      tabsetPanel(\r\n        tabPanel(\"Explore\",\r\n          plotOutput(\"tsplot\", height = \"420px\"),\r\n          tags$hr(),\r\n          tableOutput(\"summary\")\r\n        ),\r\n        tabPanel(\"About\",\r\n          tags$p(\"Data: Our World in Data energy compilation (subset bundled with app).\"),\r\n          tags$p(\"Tech: Shiny + Shinylive (webR) for 100% browser execution, deployable to static hosting.\")\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  filtered <- reactive({\r\n    d <- dat\r\n    d <- d[d$country %in% input$countries &\r\n             d$Year >= input$years[1] & d$Year <= input$years[2], ]\r\n    d\r\n  })\r\n\r\n  output$tsplot <- renderPlot({\r\n    d <- filtered()\r\n    if (nrow(d) == 0) return()\r\n\r\n    if (has_ggplot2 && has_dplyr) {\r\n      library(ggplot2); library(dplyr)\r\n      p <- d %>%\r\n        rename(share = renewables_share_energy) %>%\r\n        ggplot(aes(x = Year, y = share, color = country)) +\r\n        geom_line(linewidth = 0.9, alpha = 0.9) +\r\n        labs(x = \"Year\", y = \"Renewables (% of energy)\", color = \"Country\") +\r\n        theme_minimal(base_size = 13)\r\n      if (input$smooth) {\r\n        p <- p + geom_smooth(method = \"lm\", se = FALSE, linetype = \"dashed\", linewidth = 0.7)\r\n      }\r\n      print(p)\r\n    } else {\r\n      # Base R fallback if ggplot2/dplyr unavailable\r\n      sp <- split(d, d$country)\r\n      yr <- range(d$Year); sh <- range(d$renewables_share_energy, na.rm = TRUE)\r\n      plot(0, 0, type = \"n\", xlab = \"Year\", ylab = \"Renewables (% of energy)\",\r\n           xlim = yr, ylim = sh)\r\n      i <- 1\r\n      for (nm in names(sp)) {\r\n        lines(sp[[nm]]$Year, sp[[nm]]$renewables_share_energy, col = i, lwd = 2)\r\n        if (input$smooth) {\r\n          fit <- lm(renewables_share_energy ~ Year, data = sp[[nm]])\r\n          pred <- data.frame(Year = sp[[nm]]$Year)\r\n          lines(pred$Year, predict(fit, pred), col = i, lty = 2)\r\n        }\r\n        i <- i + 1\r\n      }\r\n      legend(\"topleft\", legend = names(sp), col = seq_along(sp), lwd = 2, bty = \"n\")\r\n    }\r\n  })\r\n\r\n  output$summary <- renderTable({\r\n    d <- filtered()\r\n    if (!nrow(d)) return(NULL)\r\n    aggregate(renewables_share_energy ~ country, d, function(x) {\r\n      c(min = round(min(x, na.rm = TRUE), 2),\r\n        mean = round(mean(x, na.rm = TRUE), 2),\r\n        max = round(max(x, na.rm = TRUE), 2))\r\n    })\r\n  }, rownames = TRUE)\r\n\r\n  output$dl <- downloadHandler(\r\n    filename = function() sprintf(\"renewables_filtered_%s.csv\", Sys.Date()),\r\n    content = function(file) write.csv(filtered(), file, row.names = FALSE)\r\n  )\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
